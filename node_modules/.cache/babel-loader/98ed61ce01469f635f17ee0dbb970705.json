{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Project-Reactjs\\\\my-app\\\\src\\\\App.js\";\nimport React, { useState } from \"react\"; // import \"./App.css\"\n// export default () => {\n// \tconst [todos, setTodos] = useState([])\n// \tconst [value, setValue] = useState('')\n// \tconst handleInputChange = (event) => {\n// \t\tsetValue(event.target.value)\n// \t}\n// \tconst handlebtnClick = () => {\n// \t\tsetTodos(value)\n// \t}\n// \tconsole.log('value: ', value)\n// \treturn (\n// \t\t<div>\n// \t\t\t<form className='form-todolist'>\n// \t\t\t\t<input type='text' placeholder='todoList...' onChange={handleInputChange}>\n// \t\t\t\t</input>\n// \t\t\t\t<button type='submit' onClick={handleInputChange} onSubmit={e => e.preventDefault()}>\n// \t\t\t\t\tAdd\n//         </button>\n// \t\t\t</form>\n// \t\t</div>\n// \t)\n// }\n\nconst useInputValue = initialValue => {\n  const [value, setValue] = useState(initialValue);\n  return {\n    value,\n    onChange: e => setValue(e.target.value),\n    resetValue: () => setValue(\"\")\n  };\n};\n\nexport default (({\n  onSubmit\n}) => {\n  const {\n    resetValue,\n    ...text\n  } = useInputValue(\"\");\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      onSubmit(text.value);\n      resetValue();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  })));\n});","map":{"version":3,"sources":["C:/Users/nguye/Project-Reactjs/my-app/src/App.js"],"names":["React","useState","useInputValue","initialValue","value","setValue","onChange","e","target","resetValue","onSubmit","text","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAGC,YAAY,IAAI;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,YAAD,CAAlC;AAEA,SAAO;AACLC,IAAAA,KADK;AAELE,IAAAA,QAAQ,EAAEC,CAAC,IAAIF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAFlB;AAGLK,IAAAA,UAAU,EAAE,MAAMJ,QAAQ,CAAC,EAAD;AAHrB,GAAP;AAKD,CARD;;AAUA,gBAAe,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAkB;AAC/B,QAAM;AAAED,IAAAA,UAAF;AAAc,OAAGE;AAAjB,MAA0BT,aAAa,CAAC,EAAD,CAA7C;AAEA,sBACE;AACE,IAAA,QAAQ,EAAEK,CAAC,IAAI;AACbA,MAAAA,CAAC,CAACK,cAAF;AACAF,MAAAA,QAAQ,CAACC,IAAI,CAACP,KAAN,CAAR;AACAK,MAAAA,UAAU;AACX,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,+CAAWE,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPF,CADF;AAWD,CAdD","sourcesContent":["import React, { useState } from \"react\";\r\n// import \"./App.css\"\r\n\r\n\r\n\r\n// export default () => {\r\n// \tconst [todos, setTodos] = useState([])\r\n// \tconst [value, setValue] = useState('')\r\n\r\n// \tconst handleInputChange = (event) => {\r\n// \t\tsetValue(event.target.value)\r\n// \t}\r\n\r\n// \tconst handlebtnClick = () => {\r\n// \t\tsetTodos(value)\r\n// \t}\r\n// \tconsole.log('value: ', value)\r\n// \treturn (\r\n// \t\t<div>\r\n// \t\t\t<form className='form-todolist'>\r\n// \t\t\t\t<input type='text' placeholder='todoList...' onChange={handleInputChange}>\r\n// \t\t\t\t</input>\r\n// \t\t\t\t<button type='submit' onClick={handleInputChange} onSubmit={e => e.preventDefault()}>\r\n// \t\t\t\t\tAdd\r\n//         </button>\r\n// \t\t\t</form>\r\n// \t\t</div>\r\n// \t)\r\n// }\r\n\r\nconst useInputValue = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    onChange: e => setValue(e.target.value),\r\n    resetValue: () => setValue(\"\")\r\n  };\r\n};\r\n\r\nexport default ({ onSubmit }) => {\r\n  const { resetValue, ...text } = useInputValue(\"\");\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        onSubmit(text.value);\r\n        resetValue();\r\n      }}\r\n    >\r\n      <input {...text} />\r\n    </form>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}